 USE Stackoverflow;

DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS questions;
DROP TABLE IF EXISTS answers;
DROP TABLE IF EXISTS comments;
DROP TABLE IF EXISTS votes;
DROP TABLE IF EXISTS answer_votes;
DROP TABLE IF EXISTS question_votes;

CREATE TABLE users
(
    id INT IDENTITY(1,1) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    isAdmin BIT NOT NULL DEFAULT 0,
    isDeleted BIT NOT NULL DEFAULT 0,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE questions
(
    id INT IDENTITY(1,1) PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
	description VARCHAR(1000) NOT NULL,
	code VARCHAR(1000) NOT NULL,
	userId INT NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (userId) REFERENCES users(id),
);
CREATE TABLE answers
(
    id INT IDENTITY(1,1) PRIMARY KEY,
	description VARCHAR(1000) NOT NULL,
	userId INT NOT NULL,
	questionId INT NOT NULL,
	isPreferred BIT NOT NULL DEFAULT 0,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (userId) REFERENCES users(id),
	FOREIGN KEY (questionId) REFERENCES questions(id) ON DELETE CASCADE,
);
CREATE TABLE comments
(
    id INT IDENTITY(1,1) PRIMARY KEY,
	description VARCHAR(1000) NOT NULL,
	userId INT NOT NULL,
	answerId INT NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (userId) REFERENCES users(id),
	FOREIGN KEY (answerId) REFERENCES answers(id) ON DELETE CASCADE,
);
CREATE TABLE answer_votes
(
    id INT IDENTITY(1,1) PRIMARY KEY,
	votes BIT DEFAULT 0,
	userId INT NOT NULL,
	answerId INT NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (userId) REFERENCES users(id),
	FOREIGN KEY (answerId) REFERENCES answers(id),
);

CREATE TABLE question_votes
(
    id INT IDENTITY(1,1) PRIMARY KEY,
	votes BIT DEFAULT 0,
	userId INT NOT NULL,
	questionId INT NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
	FOREIGN KEY (userId) REFERENCES users(id),
	FOREIGN KEY (questionId) REFERENCES questions(id),
);
